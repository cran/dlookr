% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/diagnose.R
\name{diagnose}
\alias{diagnose}
\title{Diagnose data quality of variables}
\usage{
diagnose(.data, ...)
}
\arguments{
\item{.data}{a data.frame or a \code{\link{tbl_df}}.}

\item{...}{one or more unquoted expressions separated by commas.
You can treat variable names like they are positions.
Positive values select variables; negative values to drop variables.
If the first expression is negative, diagnose() will automatically start with all variables.
These arguments are automatically quoted and evaluated in a context where column names
represent column positions.
They support unquoting and splicing.}
}
\value{
An object of tbl_df.
}
\description{
The diagnose() produces information for diagnosing
the quality of the variables of data.frame or tbl_df.
}
\details{
The scope of data quality diagnosis is information on missing values
and unique value information. Data quality diagnosis can determine variables
that require missing value processing. Also, the unique value information can
determine the variable to be removed from the data analysis.
}
\section{Diagnostic information}{

The information derived from the data diagnosis is as follows.:

\itemize{
\item variables : variable names
\item types : data type of the variable
or to select a variable to be corrected or removed through data diagnosis.
  \itemize{
    \item integer, numeric, factor, ordered, character, etc.
  }
\item missing_count : number of missing values
\item missing_percent : percentage of missing values
\item unique_count : number of unique values
\item unique_rate : ratio of unique values. unique_count / number of observation
}

See vignette("diagonosis") for an introduction to these concepts.
}

\examples{
# Generate data for the example
carseats <- ISLR::Carseats
carseats[sample(seq(NROW(carseats)), 20), "Income"] <- NA
carseats[sample(seq(NROW(carseats)), 5), "Urban"] <- NA

# Diagnosis of all variables
diagnose(carseats)

# Select the variable to diagnose
diagnose(carseats, Sales, Income, Age)
diagnose(carseats, -Sales, -Income, -Age)
diagnose(carseats, "Sales", "Income", "Age")
diagnose(carseats, 1, 3, 8)

# Using pipes ---------------------------------
library(dplyr)

# Diagnosis of all variables
carseats \%>\%
  diagnose()
# Positive values select variables
carseats \%>\%
  diagnose(Sales, Income, Age)
# Negative values to drop variables
carseats \%>\%
  diagnose(-Sales, -Income, -Age)
# Positions values select variables
carseats \%>\%
  diagnose(1, 3, 8)
# Positions values select variables
carseats \%>\%
  diagnose(-8, -9, -10)

# Using pipes & dplyr -------------------------
# Diagnosis of missing variables
carseats \%>\%
  diagnose() \%>\%
  filter(missing_count > 0)
}
\seealso{
\code{\link{diagnose_category}}, \code{\link{diagnose_numeric}}.
}
